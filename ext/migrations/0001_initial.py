# Generated by Django 4.2 on 2023-05-14 20:02

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('crop_year', models.SmallIntegerField()),
                ('state', models.CharField(max_length=2)),
                ('authors', models.CharField(max_length=150, null=True)),
                ('institution', models.CharField(max_length=150, null=True)),
                ('source_url', models.URLField(null=True)),
                ('created_on', models.DateField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BudgetCrop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm_yield', models.FloatField(default=0)),
                ('county_yield', models.FloatField(default=0)),
                ('assumed_basis', models.FloatField(default=0)),
                ('other_gov_pmts', models.FloatField(default=0)),
                ('other_revenue', models.FloatField(default=0)),
                ('fertilizers', models.FloatField(default=0)),
                ('pesticides', models.FloatField(default=0)),
                ('seed', models.FloatField(default=0)),
                ('drying', models.FloatField(default=0)),
                ('storage', models.FloatField(default=0)),
                ('other_direct_costs', models.FloatField(default=0, help_text='Other (hauling, custom operations)')),
                ('machine_hire_lease', models.FloatField(default=0, verbose_name='machine hire or lease')),
                ('utilities', models.FloatField(default=0)),
                ('machine_repair', models.FloatField(default=0)),
                ('fuel_and_oil', models.FloatField(default=0)),
                ('light_vehicle', models.FloatField(default=0)),
                ('machine_depr', models.FloatField(default=0, verbose_name='machine depreciation')),
                ('labor_and_mgmt', models.FloatField(default=0, verbose_name='labor and management')),
                ('building_repair_and_rent', models.FloatField(default=0)),
                ('building_depr', models.FloatField(default=0, verbose_name='building depreciation')),
                ('insurance', models.FloatField(default=0)),
                ('misc_overhead_costs', models.FloatField(default=0)),
                ('interest_nonland', models.FloatField(default=0, verbose_name='non-land interest cost')),
                ('other_overhead_costs', models.FloatField(default=0)),
                ('rented_land_costs', models.FloatField(default=0)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BudgetCropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('is_rotated', models.BooleanField(null=True)),
                ('is_irr', models.BooleanField(null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.SmallIntegerField()),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'verbose_name_plural': 'counties',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FarmCropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('is_fac', models.BooleanField(default=False)),
                ('is_winter', models.BooleanField(default=False)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FsaCropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FuturesPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('croptype', models.CharField(max_length=10)),
                ('exchange', models.CharField(max_length=6)),
                ('futures_month', models.CharField(max_length=8)),
                ('ticker', models.CharField(max_length=8)),
                ('price', models.FloatField()),
                ('priced_on', models.DateField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsCrop',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'ext_commodity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsCropType',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('abbr', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'ext_commoditytype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsPractice',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.SmallIntegerField()),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'ext_practice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsurableCropsForCty',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state_id', models.SmallIntegerField()),
                ('county_code', models.SmallIntegerField()),
                ('crop_id', models.SmallIntegerField(db_column='commodity_id')),
                ('crop_type_id', models.SmallIntegerField(db_column='commodity_type_id')),
                ('is_fac', models.BooleanField()),
                ('practices', django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), size=2)),
            ],
            options={
                'db_table': 'ext_insurable_crops_for_cty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_year', models.SmallIntegerField()),
                ('proj_price_disc_start', models.DateField()),
                ('proj_price_disc_end', models.DateField()),
                ('harv_price_disc_mth_start', models.DateField()),
                ('harv_price_disc_mth_end', models.DateField()),
                ('exchange', models.CharField(max_length=6)),
                ('futures_month', models.CharField(max_length=8)),
                ('ticker', models.CharField(max_length=8)),
                ('county_code', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MarketCropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaPostEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_year', models.SmallIntegerField()),
                ('forecast_month', models.CharField(max_length=8)),
                ('wasde_release_date', models.DateField(verbose_name='WASDE release date')),
                ('wasde_estimated_price', models.FloatField(null=True)),
                ('assumed_pct_locked', models.FloatField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyaPreEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_year', models.SmallIntegerField()),
                ('month', models.SmallIntegerField()),
                ('year', models.SmallIntegerField()),
                ('actual_farm_price', models.FloatField(null=True)),
                ('nearby_futures_month', models.CharField(max_length=8)),
                ('five_year_avg_basis', models.FloatField()),
                ('five_year_avg_weight', models.FloatField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PracticeAvail',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('county_code', models.SmallIntegerField()),
                ('practice', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'ext_practiceavail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReferencePrices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_year', models.SmallIntegerField()),
                ('natl_loan_rate', models.FloatField()),
                ('effective_ref_price', models.FloatField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SoybeanInsTypeForState',
            fields=[
                ('state_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('soybean_ins_type', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('abbr', models.CharField(max_length=2)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subcounty',
            fields=[
                ('id', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'subcounties',
                'db_table': 'ext_subcounty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubcountyAvail',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('county_code', models.SmallIntegerField()),
                ('practice', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'ext_subcountyavail',
                'managed': False,
            },
        ),
    ]
