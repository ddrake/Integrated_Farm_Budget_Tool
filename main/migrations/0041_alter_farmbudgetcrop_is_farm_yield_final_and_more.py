# Generated by Django 4.2.3 on 2023-07-19 22:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0040_alter_farmbudgetcrop_baseline_yield_for_var_rent_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='farmbudgetcrop',
            name='is_farm_yield_final',
            field=models.BooleanField(default=False, help_text='Adjust expected yield(s) and check this box after harvest', verbose_name='Are yields final?'),
        ),
        migrations.AlterField(
            model_name='farmbudgetcrop',
            name='yield_factor',
            field=models.FloatField(default=1, help_text='Percent of expected yield(s) assesed prior to harvest, affecting detailed budget', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2, message='Ensure this value is less than or equal to 200')], verbose_name='yield sensititivity factor'),
        ),
        migrations.AlterField(
            model_name='farmbudgetcrop',
            name='yield_variability',
            field=models.FloatField(default=0, help_text='Percent of nonland cost assumed to depend on yield', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1, message='Ensure this value is greater than or equal to 100')]),
        ),
        migrations.AlterField(
            model_name='farmcrop',
            name='prot_factor',
            field=models.FloatField(default=1, help_text='Selected percent payment factor for county premiums/indemnities.', validators=[django.core.validators.MinValueValidator(0.8, message='Ensure this value is greater than or equal to 80'), django.core.validators.MaxValueValidator(1.2, message='Ensure this value is less than or equal to 120')], verbose_name='selected payment factor'),
        ),
        migrations.AlterField(
            model_name='farmyear',
            name='est_sequest_frac',
            field=models.FloatField(default=0.062, help_text='Estimated reduction to computed total pre-cap title payment', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(0.1, message='Ensure this value is less than or equal to 10')], verbose_name='estimated sequestration percent'),
        ),
        migrations.AlterField(
            model_name='farmyear',
            name='var_rent_cap_floor_frac',
            field=models.FloatField(default=0, help_text='Floor and cap on variable rent as a percent of starting base rent', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1, message='Ensure this value is less than or equal to 100')], verbose_name='variable rent floor/cap'),
        ),
        migrations.AlterField(
            model_name='marketcrop',
            name='price_factor',
            field=models.FloatField(default=1, help_text='Percent of current futures price, reflected in detailed budget', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10, message='Ensure this value is less than or equal to 1000')], verbose_name='price sensititivity factor'),
        ),
    ]
